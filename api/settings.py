"""
Django settings for exercise project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""
import os
from firebase_admin import initialize_app
from firebase_admin import credentials


class ENVS:
	PRODUCTION = 'production'
	STAGING = 'staging'
	DEVELOPMENT = 'development'

ENV = os.environ.get('ENV', ENVS.DEVELOPMENT)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')
if SECRET_KEY is None:
	SECRET_KEY = '15h#cxhk%p(^j_z8+4h6cc8_frh0o7%kn)%g_)^yw6=$+1u=#*'

BACKGROUND_TASK_RUN_ASYNC = False

ALLOWED_HOSTS=['*']
CORS_ORIGIN_ALLOW_ALL = True

# Application definition

THIRD_PARTY_APPS = [
	# Admin Panel
	'jazzmin',
	'import_export',
	'crispy_forms',
	'django_urlconf_export',

	# Django
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'django.contrib.gis',
	'django.contrib.sites',
	
	'storages',
	'fcm_django',
	'phonenumber_field',
	'corsheaders',
	'django_extensions',
	'drf_extra_fields',
	'django_filters',
	'rest_framework',
	'rest_framework_filters',
	'rest_framework.authtoken',
]

INTERNAL_APPS = [
	'core',
	'api'
]

INSTALLED_APPS = THIRD_PARTY_APPS + INTERNAL_APPS

SITE_ID = 1

MIDDLEWARE = [
	'corsheaders.middleware.CorsMiddleware',
	'whitenoise.middleware.WhiteNoiseMiddleware',
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
	'api.middleware.SetLastVisitMiddleware',
]

ROOT_URLCONF = 'core.urls'

CRISPY_TEMPLATE_PACK = 'uni_form'
TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [os.path.join(BASE_DIR, "templates")],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
				'core.context_processors.settings_processor',
			],
		},
	},
]

WSGI_APPLICATION = 'api.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases
DATABASES = {}
if os.environ.get('WORKSTATION') == 'localhost':
	import dj_database_url
	DATABASES['default'] = dj_database_url.config(conn_max_age=0)
	DATABASES['default']['ENGINE'] = 'django.contrib.gis.db.backends.postgis'
else:
	DATABASES = {
		'default': {
			'ENGINE': 'django.contrib.gis.db.backends.postgis',
			'NAME': os.environ.get('DB_NAME'),
			'USER': os.environ.get('DB_USER'),
			'PASSWORD': os.environ.get('DB_PASSWORD'),
			'HOST': os.environ.get('DB_HOST'),
			'PORT': os.environ.get('DB_PORT'),
			'CONN_MAX_AGE': 0
		}
	}

AUTH_USER_MODEL = 'api.Profile'

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]

DATA_UPLOAD_MAX_NUMBER_FIELDS = 10240 # higher than the default count of fields

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = False

REST_FRAMEWORK = {
	'DEFAULT_AUTHENTICATION_CLASSES': [
		'rest_framework.authentication.TokenAuthentication',
		'rest_framework.authentication.SessionAuthentication',
	],
	'DEFAULT_FILTER_BACKENDS': [
		'django_filters.rest_framework.DjangoFilterBackend',
		'rest_framework.filters.OrderingFilter',
	],
	'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
	'PAGE_SIZE': 50
}

ANDROID_DEV_BASE_URL = 'http://10.0.2.2:8000'

# API KEYS
GOOGLE_API_KEY = os.environ.get('GOOGLE_API_KEY')

TWILIO_AUTH_TOKEN = os.environ.get('TWILIO_AUTH_TOKEN')
TWILIO_SID = os.environ.get('TWILIO_SID')
TWILIO_SENDER_VERIFICATION = os.environ.get('TWILIO_SENDER_VERIFICATION')
TWILIO_SENDER_MARKETING = os.environ.get('TWILIO_SENDER_MARKETING')
TWILIO_SENDER_INTERNAL = os.environ.get('TWILIO_SENDER_INTERNAL')

API_BASE_URL = os.environ.get('API_BASE_URL')
WEBAPP_BASE_URL = os.environ.get('WEBAPP_BASE_URL')

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/
STORAGE_BACKEND = os.getenv('STORAGE_BACKEND')
if STORAGE_BACKEND == 'S3':
    # aws settings
    AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')
    AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')
    AWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')
    AWS_DEFAULT_ACL = None
    AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'
    AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400'}
    # s3 static settings
    STATIC_LOCATION = 'static'
    STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{STATIC_LOCATION}/'
    STATICFILES_STORAGE = 'api.storage_backends.StaticStorage'
    # s3 public media settings
    PUBLIC_MEDIA_LOCATION = 'media'
    MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{PUBLIC_MEDIA_LOCATION}/'
    DEFAULT_FILE_STORAGE = 'api.storage_backends.PublicMediaStorage'
else:
    STATIC_URL = '/static/'
    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
    MEDIA_URL = '/media/'
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATICFILES_DIRS = [ 
	BASE_DIR + "/core/static", 
	BASE_DIR + "/core/staticfiles", 
] 

# EMAIL CONFIG
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_HOST = 'smtp.mailgun.org'
EMAIL_PORT = 587
EMAIL_HOST_USER = os.environ.get('MAILGUN_USER')
EMAIL_HOST_PASSWORD = os.environ.get('MAILGUN_PASSWORD')
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'ReviewIT Team <noreply@reviewIT.com>'

DEFAULT_PROFILE_PICTURE = API_BASE_URL + "/static/images/avatars/avatar-7.jpg"
DEFAULT_TAG_PICTURE = API_BASE_URL + "/static/images/avatars/avatar-7.jpg"

FIREBASE_APP = None
try:
	FIREBASE_APP = initialize_app(credentials.Certificate(BASE_DIR + "/autum-e802f-firebase-adminsdk-bdxob-9ad5de6752.json"))
except ValueError:
	# Thrown if FIREBASE_APP has already been initialized.
	pass

# To learn more, visit the docs here:
# https://cloud.google.com/docs/authentication/getting-started>

FCM_DJANGO_SETTINGS = {
	 # default: _('FCM Django')
	"APP_VERBOSE_NAME": "Autum",
	 # true if you want to have only one active device per registered user at a time
	 # default: False
	"ONE_DEVICE_PER_USER": False,
	 # devices to which notifications cannot be sent,
	 # are deleted upon receiving error response from FCM
	 # default: False
	"DELETE_INACTIVE_DEVICES": False,
}

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = (ENV == ENVS.DEVELOPMENT)


#SENTRY INTEGRATION - START
import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration

sentry_sdk.init(
    dsn="https://dd3ec02a648d4770b5dfbfabd9d2f78f@o1093419.ingest.sentry.io/6112776",
    integrations=[DjangoIntegration()],

    # Set traces_sample_rate to 1.0 to capture 100%
    # of transactions for performance monitoring.
    # We recommend adjusting this value in production.
    traces_sample_rate=0.2,

    # If you wish to associate users to errors (assuming you are using
    # django.contrib.auth) you may enable sending PII data.
    send_default_pii=True,
)
#SENTRY INTEGRATION - END

LOGO_URL = 'https://autum-images.s3.us-east-2.amazonaws.com/logo_notification.png'


####################
# JAZZMIN SETTINGS #
####################

JAZZMIN_SETTINGS = {
	# title of the window
	'site_title': 'Autum',

	# Title on the brand, and the login screen (19 chars max)
	'site_header': 'Autum Admin',

	# 	square logo to use for your site, must be present in static files, used for favicon and brand on top left
	'site_logo': 'jazzmin/img/autum.png',

	# Welcome text on the login screen
	'welcome_sign': 'Welcome to Autum',

	# Copyright on the footer
	'copyright': 'Autum Inc.',

	# The model admin to search from the search bar, search bar omitted if excluded
	'search_model': 'auth.User',

	# Field name on user model that contains avatar image
	'user_avatar': None,

	############
	# Top Menu #
	############

	# Links to put along the top menu
	'topmenu_links': [

		# Url that gets reversed (Permissions can be added)
		{'name': 'Home',  'url': 'admin:index', 'permissions': ['auth.view_user']},

		# external url that opens in a new window (Permissions can be added)
		{'name': 'Support', 'url': 'https://github.com/farridav/django-jazzmin/issues', 'new_window': True},

		# model admin to link to (Permissions checked against model)
		{'model': 'auth.User'},

		# App with dropdown menu to all its models pages (Permissions checked against models)
		{'app': 'polls'},
	],

	#############
	# User Menu #
	#############

	# Additional links to include in the user menu on the top right ('app' url type is not allowed)
	'usermenu_links': [
		{'name': 'Support', 'url': 'https://github.com/farridav/django-jazzmin/issues', 'new_window': True},
		{'model': 'auth.user'}
	],

	#############
	# Side Menu #
	#############

	# Whether to display the side menu
	'show_sidebar': True,

	# Whether to aut expand the menu
	'navigation_expanded': True,

	# Hide these apps when generating side menu e.g (auth)
	'hide_apps': [],

	# Hide these models when generating side menu (e.g auth.user)
	'hide_models': [],

	# List of apps to base side menu ordering off of (does not need to contain all apps)
	'order_with_respect_to': ['accounts', 'polls'],

	# Custom links to append to app groups, keyed on app name
	'custom_links': {
		'polls': [{
			'name': 'Make Messages', 
			'url': 'make_messages', 
			'icon': 'fas fa-comments',
			'permissions': ['polls.view_poll']
		}]
	},

	# Custom icons for side menu apps/models See https://www.fontawesomecheatsheet.com/font-awesome-cheatsheet-5x/
	# for a list of icon classes
	'icons': {
		'auth': 'fas fa-users-cog',
		'auth.user': 'fas fa-user',
		'auth.Group': 'fas fa-users',
	},
	# Icons that are used when one is not manually specified
	'default_icon_parents': 'fas fa-chevron-circle-right',
	'default_icon_children': 'fas fa-circle',

	#############
	# UI Tweaks #
	#############
	# Relative paths to custom CSS/JS scripts (must be present in static files)
	"custom_css": None,
	"custom_js": None,
	# Whether to show the UI customizer on the sidebar
	"show_ui_builder": True,


	###############
	# Change view #
	###############
	# Render out the change view as a single form, or in tabs, current options are
	# - single
	# - horizontal_tabs (default)
	# - vertical_tabs
	# - collapsible
	# - carousel
	"changeform_format": "horizontal_tabs",
	# override change forms on a per modeladmin basis
	"changeform_format_overrides": {"auth.user": "collapsible", "auth.group": "vertical_tabs",},
}

#Customize UI Extended Options
JAZZMIN_UI_TWEAKS = {
	"navbar_small_text": False,
	"footer_small_text": True,
	"body_small_text": False,
	"brand_small_text": False,
	"brand_colour": False,
	"accent": "accent-primary",
	"navbar": "navbar-dark",
	"no_navbar_border": False,
	"sidebar": "sidebar-dark-olive",
	"sidebar_nav_small_text": False,
	"sidebar_disable_expand": False,
	"sidebar_nav_child_indent": False,
	"sidebar_nav_compact_style": False,
	"sidebar_nav_legacy_style": False,
	"sidebar_nav_flat_style": True
}

